Barefoot Networks Diags
=======================
--- Extracting package ---
mkdir diag_pkg
tar -xvzf <bf-diag-image-name> -C diag_pkg

--- Environment setup ---
sudo bash
export BF_DIAG_PKG_DIR=$(pwd)/diag_pkg
export BF_DIAG_INSTALL_DIR=$BF_DIAG_PKG_DIR/install
export LD_LIBRARY_PATH=/usr/local/lib:$BF_DIAG_INSTALL_DIR/lib:$LD_LIBRARY_PATH
cd $BF_DIAG_INSTALL_DIR/bin

Load BF_KDRV and BF_FPGA
=========================
sudo $BF_DIAG_INSTALL_DIR/bin/bf_kdrv_mod_load $BF_DIAG_INSTALL_DIR
sudo $BF_DIAG_INSTALL_DIR/bin/bf_fpga_mod_load $BF_DIAG_INSTALL_DIR

BF_FPGA Utility:
=======================
The <fpga_util> is a stand alone utility which provides you access to the BF
FPGA on board. bf_fpga kernel mode module must have been loaded. If not, load
it like this.

$ cd <project>
$ install/bin/bf_fpga_mod_load <project install dir path>

Expect to find the device file, /dev/bf_fpga_0

--Running the fpga utility

$ cd $BF_DIAG_INSTALL_DIR/bin/

A dump of all the commands can be obtained by simply running
$ ./fpga_util

Usage:
fpga_util i2c_read <fpga_id> <bus> <mux_i2c_adr> <mux_chn> <i2c_addr> <length>
fpga_util i2c_write <fpga_id> <bus> <mux_i2c_adr> <mux_chn> <i2c_addr> <length>
 <byte1> [<byte2> ...]
fpga_util i2c_addr_read <fpga_id> <bus> <mux_i2c_adr> <mux_chn> <i2c_addr>
 <read_length> <write_length> <byte1> [<byte2> ...]
fpga_util reg_read <fpga_id> <reg_addr>
fpga_util reg_write <fpga_id> <reg_addr> <32bit data>

fpga_id : 0 for Newport board
bus : zero based i2c bus number off of fpga. e.g. QSFP 1 thru 32 are on bus 0
thru 31, respectively.
mux_i2c_addr : Mux i2c address if there is one in the path of end point i2c
device. Must be >= 0x80 if there is no mux device in the path.
mux_chn : The channel mask to write into mus to enable the path to end point
device. (don’t care if there is no mux in the path)
i2c_addr : end point device i2c address

Example usages of the utility are as follows
1. Read 10 bytes from eeprom  at i2c address 0x51 , on mux channel mask =  0x40,
mux address =  0x75, eeprom register offset 0x0001, bus = 32

$./fpga_util i2c_addr_read 0 32 0x74 0x40 0x51 10 2 0 1
ff ff ff ff ff ff ff ff ff 00

2. Read 2 bytes from QSFP port 3 from internal; offset 0x0c
./fpga_util i2c_addr_read 0 2 0xff 0 0x50 2 1 0x0c
00 00

3. read fpga register offset 0x1010 (offset must be 4 byte aligned)
./fpga_util reg_read 0 0x1010
register offset 0x1010 is 0x0

FPGA firmware update utility:
./bf_fpga_update <fpga_id= 0> <firmware .bin file>


BF-SHELL UCLI
=======================

Introduction:
BF-Shell UCLI gives access to internal BF commands. You can telnet to the
switch to get access to ucli.

Creating a Session:
Here is the sequence to login to ucli.

1. telnet <switch-IP> 9999
   Expected output:  bfshell>
   If you are on the switch, you could simply do:
   telnet localhost 9999
2. Type "ucli" at the bfshell prompt
   bfshell> ucli
   You are now in the bf-shell ucli.
   Expected output:  bf-sde>
3. If you want to enter the Port-manager command subtree, type "pm"
   bf-sde> pm
   Expected output: bf-sde.bf_pltfm.pm>
4. You can type "help" for a list of supported commands.
   Use ".." to go one level behind in the ucli tree.
5. To exit ucli type "exit"

Ending a Session:
To end the session close the telnet session

Commands supported:
1. pm show : Brief dump of port counters and other port information


SWUTIL Utility
=======================
Introduction:
swutil is a utility that can be used to issue diag commands.
Note that any port specified to swutil should be the front panel port number.

Setup:
swutil binary can be found in the following location.
$BF_DIAG_INSTALL_DIR/bin

Commands:
Following commands are available in swutil

1.  ./swutil -C -S --install-path=$BF_DIAG_INSTALL_DIR
    Install path is the directory path where the install directory is located
    Run command as superuser. Please load Kernel driver before starting bf-drivers:
    $BF_DIAG_INSTALL_DIR/bin/bf_kdrv_mod_load $BF_DIAG_INSTALL_DIR
2.  ./swutil -C -r --install-path=$BF_DIAG_INSTALL_DIR
    Install path is the directory path where the install directory is located
    Run command as superuser
3.  ./swutil -C -s
    Run command as superuser
4.  ./swutil version
5.  ./swutil ps [front-port-name]
6.  ./swutil linespeed init <start_port> <size> <type>
7.  ./swutil linespeed run <time> <pkt_size> <num_packet>
8.  ./swutil linespeed stop
9.  ./swutil linespeed show
10. ./swutil linespeed end
11. ./swutil phy info
12. ./swutil show pmap
13. ./swutil show temp
14. ./swutil vlan create <vid>  pbm=<portbitmap> ubm=<portbitmap>
    Multiple ports could be specified using comma and/or range.
    Example: pbm=1-3,5,8,10-11
15. ./swutil vlan add <vid> pbm=<portbitmap> ubm=<portbitmap>
16. ./swutil vlan destroy <vid>
17. ./swutil vlan show
18. ./swutil led <color> [front-port-name]
     color= {red, green, blue, off}
19. ./swutil led_port
20. ./swutil port <front-port-name> speed={ 400000 | 200000 | 100000 | 50000 | 40000 | 25000 | 10000 }
21. ./swutil port <front-port-name> fec {ON | OFF}
22. ./swutil port <front-port-name> autoneg {ON | OFF | DEFAULT}
23. ./swutil phy <front-port-name> { CL93N72_UT_CTL2r.1 CL93N72_TXFIR_PRE2={-31 - 31} |
                                     CL93N72_UT_CTL2r.1 CL93N72_TXFIR_PRE1={-31 - 31}
                                     CL93N72_UT_CTL3r.1 CL93N72_TXFIR_MAIN={0 - 23}  |
                                     CL93N72_UT_CTL1r.1 CL93N72_TXFIR_POST1={-31 - 31} |
                                     CL93N72_UT_CTL1r.1 CL93N72_TXFIR_POST2={-31 - 31} }
24. ./swutil phy ber <front-port-name>
25. ./swutil phy diag <front-port-name> eyescan
26. ./swutil phy diag <front-port-name> prbs set p={0 | 1 | 2 | 3 | 4}
      p values: 0=prbs9, 1=prbs13, 2=prbs15, 3=prbs23, 4=prbs31
27. ./swutil phy diag <front-port-name> prbs { show | clean }
